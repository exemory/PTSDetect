name: Production deployment

on:
  push:
    tags:
      - v*

env:
  IMAGE_TAG: ${{ github.ref_name }}

jobs:
  build-and-publish:
    name: Build and publish PTSDetect API image
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Docker image
        working-directory: backend
        run: docker build -t ${{vars.PTSDETECT_API_IMAGE}}:latest -t ${{vars.PTSDETECT_API_IMAGE}}:${{env.IMAGE_TAG}} .

      - name: Login to Docker Hub
        run: docker login -u ${{vars.DOCKER_HUB_USERNAME}} -p ${{secrets.DOCKER_HUB_TOKEN}}

      - name: Push Docker image to Docker Hub
        run: docker push -a ${{vars.PTSDETECT_API_IMAGE}}

      - name: Logout from Docker Hub
        run: docker logout

  deploy-infrastructure:
    name: Deploy infrastructure
    runs-on: ubuntu-latest
    environment: production
    outputs:
      AZURE_STORAGE_ACCOUNT_CONNECTION_STRING: ${{ steps.tf.outputs.AZURE_STORAGE_ACCOUNT_CONNECTION_STRING }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TERRAFORM_CLOUD_TOKEN }}
          terraform_wrapper: false

      - name: Terraform check formatting
        working-directory: terraform
        run: terraform fmt -check

      - name: Terraform Init
        working-directory: terraform
        run: terraform init -input=false

      - name: Terraform validate
        working-directory: terraform
        run: terraform validate

      - name: Terraform Plan
        working-directory: terraform
        run: terraform plan -input=false

      - name: Terraform Apply
        id: tf-apply
        working-directory: terraform
        run: terraform apply -auto-approve -input=false